% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plottingmodelplots.R
\name{plot_cumresponse}
\alias{plot_cumresponse}
\title{Cumulative Respose plot}
\usage{
plot_cumresponse(data = plot_input, custom_line_colors = NA,
  highlight_decile = NA)
}
\arguments{
\item{data}{Dataframe. Dataframe needs to be created with \code{\link{plotting_scope}}
or else meet required input format.}

\item{custom_line_colors}{Vector of Strings. Specifying colors for the lines in the plot.
When not specified, colors from the RColorBrewer palet "Set1" are used.}

\item{highlight_decile}{Integer. Specifying the decile at which the plot is annotated
and performances are highlighted.
When not specified, colors from the RColorBrewer palet "Set1" are used.}
}
\value{
ggplot object. Cumulative Response plot.
}
\description{
Generates the cumulative response plot. It plots the cumulative percentage of
target class observations up until that decile. It helps answering the question:
When we apply the model and select up until decile X, what is the expected percentage of
target class observations in the selection?
}
\examples{
data(iris)
# add some noise to iris to prevent perfect models
addNoise <- function(x) round(rnorm(n=100,mean=mean(x),sd=sd(x)),1)
iris_addnoise <- as.data.frame(lapply(iris[1:4], addNoise))
iris_addnoise$Species <- sample(unique(iris$Species),100,replace=TRUE)
iris <- rbind(iris,iris_addnoise)
train_index =  sample(seq(1, nrow(iris)),size = 0.7*nrow(iris), replace = F )
train = iris[train_index,]
test = iris[-train_index,]
trainTask <- mlr::makeClassifTask(data = train, target = "Species")
testTask <- mlr::makeClassifTask(data = test, target = "Species")
mlr::configureMlr() # this line is needed when using mlr without loading it (mlr::)
#estimate models
task = mlr::makeClassifTask(data = train, target = "Species")
lrn = mlr::makeLearner("classif.randomForest", predict.type = "prob")
rf = mlr::train(lrn, task)
lrn = mlr::makeLearner("classif.multinom", predict.type = "prob")
mnl = mlr::train(lrn, task)
prepare_scores_and_deciles(datasets=list("train","test"),
                      dataset_labels = list("train data","test data"),
                      models = list("rf","mnl"),
                      model_labels = list("random forest","multinomial logit"),
                      target_column="Species")
head(scores_and_deciles)
aggregate_over_deciles()
plotting_scope()
plot_cumresponse()
plot_cumresponse(custom_line_colors="pink")
plot_cumresponse(highlight_decile=3)
}
\seealso{
\code{\link{modelplotr}} for generic info on the package \code{moddelplotr}

\code{\link{prepare_scores_and_deciles}} for details on the function \code{prepare_scores_and_deciles}
that generates the required input.

\code{\link{aggregate_over_deciles}} for details on the function \code{aggregate_over_deciles} that
generates the required input.

\code{\link{plotting_scope}} for details on the function \code{plotting_scope} that
filters the output of \code{aggregate_over_deciles} to prepare it for the required evaluation.

\url{https://github.com/modelplot/modelplotr} for details on the package

\url{https://modelplot.github.io/} for our blog on the value of the model plots
}
